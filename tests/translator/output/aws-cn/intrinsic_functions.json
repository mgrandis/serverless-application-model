{
  "Parameters": {
    "CodeBucket": {
      "Type": "String",
      "Default": "sam-demo-bucket"
    },
    "FunctionName": {
      "Type": "String",
      "Default": "MySuperFunctionName"
    },
    "TracingConfigParam": {
      "Type": "String",
      "Default": "PassThrough"
    },
    "MyExplicitApiName": {
      "Type": "String",
      "Default": "SomeName"
    },
    "CodeKey": {
      "Type": "String",
      "Default": "key"
    }
  },
  "Conditions": {
    "TrueCondition": {
      "Fn::Equals": [
        true,
        true
      ]
    }
  },
  "Resources": {
    "MyTable": {
      "Type": "AWS::DynamoDB::Table",
      "Properties": {
        "AttributeDefinitions": [
          {
            "AttributeName": "id",
            "AttributeType": "S"
          }
        ],
        "KeySchema": [
          {
            "AttributeName": "id",
            "KeyType": "HASH"
          }
        ],
        "ProvisionedThroughput": {
          "ReadCapacityUnits": 5,
          "WriteCapacityUnits": 5
        },
        "StreamSpecification": {
          "StreamViewType": "NEW_IMAGE"
        }
      }
    },
    "SqsDlqQueue": {
      "Type": "AWS::SQS::Queue"
    },
    "SnsDlqQueue": {
      "Type": "AWS::SNS::Topic"
    },
    "MyNewRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": [
                "sts:AssumeRole"
              ],
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "lambda.amazonaws.com"
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": [
                    "cloudwatch:*",
                    "logs:*"
                  ],
                  "Effect": "Allow",
                  "Resource": "*"
                }
              ],
              "Version": "2012-10-17"
            },
            "PolicyName": "lambdaRole"
          }
        ]
      }
    },
    "MyFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "CodeBucket"
          },
          "S3Key": {
            "Fn::Sub": "code.zip.${CodeKey}"
          },
          "S3ObjectVersion": {
            "Fn::Join": [
              "",
              [
                "some",
                "version"
              ]
            ]
          }
        },
        "FunctionName": {
          "Fn::Sub": "${FunctionName}"
        },
        "Handler": {
          "Fn::Sub": [
            "${filename}.handler",
            {
              "filename": "index"
            }
          ]
        },
        "Role": {
          "Fn::GetAtt": [
            "MyNewRole",
            "Arn"
          ]
        },
        "Runtime": {
          "Fn::Join": [
            "",
            [
              "nodejs",
              "4.3"
            ]
          ]
        },
        "Tags": [
          {
            "Key": "lambda:createdBy",
            "Value": "SAM"
          }
        ],
        "TracingConfig": {
          "Mode": {
            "Ref": "TracingConfigParam"
          }
        }
      }
    },
    "MyFunctionMyApiPermissiondev": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Ref": "MyFunction"
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Sub": [
            "arn:aws-cn:execute-api:${AWS::Region}:${AWS::AccountId}:${__ApiId__}/${__Stage__}/GET/",
            {
              "__ApiId__": {
                "Ref": "MyExplicitApi"
              },
              "__Stage__": "*"
            }
          ]
        }
      }
    },
    "FunctionWithExplicitS3Uri": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": "mybucket",
          "S3Key": "mykey",
          "S3ObjectVersion": "MyVersion"
        },
        "Handler": "stream.ddb_handler",
        "Role": {
          "Fn::GetAtt": [
            "FunctionWithExplicitS3UriRole",
            "Arn"
          ]
        },
        "Runtime": "python2.7",
        "Tags": [
          {
            "Key": "lambda:createdBy",
            "Value": "SAM"
          }
        ]
      }
    },
    "FunctionWithExplicitS3UriRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Action": [
                "sts:AssumeRole"
              ],
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "lambda.amazonaws.com"
                ]
              }
            }
          ]
        },
        "ManagedPolicyArns": [
          "arn:aws-cn:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
        ],
        "Tags": [
          {
            "Key": "lambda:createdBy",
            "Value": "SAM"
          }
        ]
      }
    },
    "DynamoDBFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": "sam-demo-bucket",
          "S3Key": "streams.zip"
        },
        "Handler": "stream.ddb_handler",
        "Role": {
          "Fn::GetAtt": [
            "DynamoDBFunctionRole",
            "Arn"
          ]
        },
        "Runtime": "python2.7",
        "Tags": [
          {
            "Key": "lambda:createdBy",
            "Value": "SAM"
          }
        ]
      }
    },
    "DynamoDBFunctionRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Action": [
                "sts:AssumeRole"
              ],
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "lambda.amazonaws.com"
                ]
              }
            }
          ]
        },
        "ManagedPolicyArns": [
          "arn:aws-cn:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
          "arn:aws-cn:iam::aws:policy/service-role/AWSLambdaDynamoDBExecutionRole"
        ],
        "Tags": [
          {
            "Key": "lambda:createdBy",
            "Value": "SAM"
          }
        ]
      }
    },
    "DynamoDBFunctionMyDDBStream": {
      "Type": "AWS::Lambda::EventSourceMapping",
      "Properties": {
        "BatchSize": 200,
        "EventSourceArn": {
          "Fn::GetAtt": [
            "MyTable",
            "StreamArn"
          ]
        },
        "FunctionName": {
          "Ref": "DynamoDBFunction"
        },
        "StartingPosition": "LATEST"
      }
    },
    "MySqsDlqLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": "sam-demo-bucket",
          "S3Key": "hello.zip"
        },
        "DeadLetterConfig": {
          "TargetArn": {
            "Fn::GetAtt": [
              "SqsDlqQueue",
              "Arn"
            ]
          }
        },
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "MySqsDlqLambdaFunctionRole",
            "Arn"
          ]
        },
        "Runtime": "python2.7",
        "Tags": [
          {
            "Key": "lambda:createdBy",
            "Value": "SAM"
          }
        ]
      }
    },
    "MySqsDlqLambdaFunctionRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Action": [
                "sts:AssumeRole"
              ],
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "lambda.amazonaws.com"
                ]
              }
            }
          ]
        },
        "ManagedPolicyArns": [
          "arn:aws-cn:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
        ],
        "Policies": [
          {
            "PolicyName": "DeadLetterQueuePolicy",
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Action": "sqs:SendMessage",
                  "Resource": {
                    "Fn::GetAtt": [
                      "SqsDlqQueue",
                      "Arn"
                    ]
                  },
                  "Effect": "Allow"
                }
              ]
            }
          }
        ],
        "Tags": [
          {
            "Key": "lambda:createdBy",
            "Value": "SAM"
          }
        ]
      }
    },
    "MySnsDlqLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": "sam-demo-bucket",
          "S3Key": "hello.zip"
        },
        "DeadLetterConfig": {
          "TargetArn": {
            "Ref": "SnsDlqQueue"
          }
        },
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "MySnsDlqLambdaFunctionRole",
            "Arn"
          ]
        },
        "Runtime": "python2.7",
        "Tags": [
          {
            "Key": "lambda:createdBy",
            "Value": "SAM"
          }
        ]
      }
    },
    "MySnsDlqLambdaFunctionRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Action": [
                "sts:AssumeRole"
              ],
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "lambda.amazonaws.com"
                ]
              }
            }
          ]
        },
        "ManagedPolicyArns": [
          "arn:aws-cn:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
        ],
        "Policies": [
          {
            "PolicyName": "DeadLetterQueuePolicy",
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Action": "sns:Publish",
                  "Resource": {
                    "Ref": "SnsDlqQueue"
                  },
                  "Effect": "Allow"
                }
              ]
            }
          }
        ],
        "Tags": [
          {
            "Key": "lambda:createdBy",
            "Value": "SAM"
          }
        ]
      }
    },
    "MyExplicitApi": {
      "Type": "AWS::ApiGateway::RestApi",
      "Properties": {
        "BodyS3Location": {
          "Bucket": "sam-demo-bucket",
          "Key": "swagger.yaml"
        },
        "Name": {
          "Ref": "MyExplicitApiName"
        },
        "Parameters": {
          "endpointConfigurationTypes": "REGIONAL"
        },
        "EndpointConfiguration": {
          "Types": [
            "REGIONAL"
          ]
        }
      }
    },
    "MyExplicitApiDeployment152df1b971": {
      "Type": "AWS::ApiGateway::Deployment",
      "Properties": {
        "Description": "RestApi deployment id: 152df1b971ca9a92901a08237311b9430df86762",
        "RestApiId": {
          "Ref": "MyExplicitApi"
        },
        "StageName": "Stage"
      }
    },
    "MyExplicitApidevStage": {
      "Type": "AWS::ApiGateway::Stage",
      "Properties": {
        "DeploymentId": {
          "Ref": "MyExplicitApiDeployment152df1b971"
        },
        "RestApiId": {
          "Ref": "MyExplicitApi"
        },
        "StageName": "dev",
        "Variables": {
          "FunctionName": {
            "Fn::Sub": "${MyFunction}"
          },
          "Var2": {
            "Fn::Join": [
              "join ",
              [
                "some value ",
                "with some other value"
              ]
            ]
          }
        }
      }
    },
    "ApiWithExplicitS3Uri": {
      "Type": "AWS::ApiGateway::RestApi",
      "Condition": "TrueCondition",
      "Properties": {
        "BodyS3Location": {
          "Bucket": "mybucket",
          "Key": "mykey",
          "Version": 3
        },
        "Parameters": {
          "endpointConfigurationTypes": "REGIONAL"
        },
        "EndpointConfiguration": {
          "Types": [
            "REGIONAL"
          ]
        }
      }
    },
    "ApiWithExplicitS3UriDeploymentf9e1faacb6": {
      "Type": "AWS::ApiGateway::Deployment",
      "Condition": "TrueCondition",
      "Properties": {
        "Description": "RestApi deployment id: f9e1faacb6546a93b8ec6349a559b87df4f473eb",
        "RestApiId": {
          "Ref": "ApiWithExplicitS3Uri"
        },
        "StageName": "Stage"
      }
    },
    "ApiWithExplicitS3UridevStage": {
      "Type": "AWS::ApiGateway::Stage",
      "Condition": "TrueCondition",
      "Properties": {
        "DeploymentId": {
          "Ref": "ApiWithExplicitS3UriDeploymentf9e1faacb6"
        },
        "RestApiId": {
          "Ref": "ApiWithExplicitS3Uri"
        },
        "StageName": "dev"
      }
    }
  }
}